// <auto-generated/>
namespace UI
{
    using BE.Entidades;
    using BLL;
    using DAL.Dao;
    using DAL.Utils;
    using System;
    using System.Linq;
    using System.Windows.Forms;

    public partial class Login : Form
    {
        private const string nombreForm = "Login";

        private log4net.ILog log;
        private IPrincipal PrincipalForm;
        private IUsuarioBLL usuarioBLL;
        private IFormControl formControl;
        private readonly IIdiomaBLL idiomaBLL;
        private readonly IDigitoVerificador digitoVerificador;
        private readonly ITraductor traductor;
        private IPatenteBLL patenteBLL;
        private IVentaBLL ventaBLL;
        private IBitacoraBLL bitacoraBLL;

        public Login(IIdiomaBLL idiomaBLL, IDigitoVerificador digitoVerificador, ITraductor traductor)
        {
            this.digitoVerificador = digitoVerificador;
            this.idiomaBLL = idiomaBLL;
            this.traductor = traductor;
            InitializeComponent();
            txt_contraseña.PasswordChar = '*';
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            this.AcceptButton = btn_ingresar;
            log = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
            PrincipalForm = IoCContainer.Resolve<IPrincipal>();
            usuarioBLL = IoCContainer.Resolve<IUsuarioBLL>();
            patenteBLL = IoCContainer.Resolve<IPatenteBLL>();
            ventaBLL = IoCContainer.Resolve<IVentaBLL>();
            bitacoraBLL = IoCContainer.Resolve<IBitacoraBLL>();
            formControl = IoCContainer.Resolve<IFormControl>();
            CargarCombo();
            formControl.LenguajeSeleccionado = (Idioma)cbo_idioma.SelectedItem;
            Traduccir();
            ComprobarBaseDeDatos();
        }
        //COMPROBACION DE INTEGRIDAD
        //SI DIGITO VERIFICADOR ES DISTINTO AL ASIGNADO EN LA BASE ARROJA CARTEL DE PROBLEMA DE INTEGRIDAD.
        private void ComprobarBaseDeDatos()
        {
            if (!digitoVerificador.ComprobarIntegridad())
            {
                Alert.ShowSimpleAlert("Problema integridad base de datos, contacte al administrador", "MSJ000");

                var items = new InputBoxItem[2];
                items[0] = new InputBoxItem("Usuario", "", false);
                items[1] = new InputBoxItem("Contraseña", "", true);

                var input = InputBox.Show("Ingrese credenciales de un administrador", items, InputBoxButtons.OK);

                if (input.Result == InputBoxResult.OK)
                {
                    var usuario = usuarioBLL.ObtenerUsuarioConEmail(input.Items["Usuario"]);
                    formControl.GuardarDatosSesionUsuario(usuario);
                    usuario = formControl.ObtenerInfoUsuario();

                    if (usuario.Familia.Any(x => x.Descripcion == "Admin"))
                    {
                        if (usuarioBLL.LogIn(input.Items["Usuario"], input.Items["Contraseña"]))
                        {
                            //Esto solo recalcula el DVVertical en caso de que borren una row
                            digitoVerificador.ActualizarDVVertical("Usuario");
                            digitoVerificador.ActualizarDVVertical("Bitacora");
                            digitoVerificador.ActualizarDVVertical("Patente");
                            digitoVerificador.ActualizarDVVertical("Venta");
                            usuarioBLL.CargarDVHPatentes();
                            patenteBLL.CargarDVHPatentes();
                            bitacoraBLL.CargarDVHBitacora();
                            ventaBLL.CargarDVHVenta();
                        }
                    }
                    else
                    {
                        Alert.ShowSimpleAlert("Usted no es un usuario administrador", "MSJ087");
                        this.Close();
                    }
                }
                else
                {
                    Alert.ShowSimpleAlert("Usted no es un usuario administrador", "MSJ087");
                    this.Close();
                }

            }
        }

        private void Traduccir()
        {
            traductor.Traduccir(this, nombreForm);
        }
        //IDIOMA
        private void CargarCombo()
        {
            var idioma = idiomaBLL.ObtenerTodosLosIdiomas();
            cbo_idioma.DataSource = idioma;
            cbo_idioma.ValueMember = "IdIdioma";
            cbo_idioma.DisplayMember = "Descripcion";
            cbo_idioma.SelectedIndex = 0;
        }
        //BOTON PARA LOGUEARSE
        private void btn_ingresar_Click(object sender, EventArgs e)
        {
            this.CatchException(() =>
            {
                var usuario = txt_user.Text;
                var contraseña = txt_contraseña.Text;
                ////lucas_matalima@hotmail.com pw: salom645

                if (usuarioBLL.ObtenerUsuarioConEmail(usuario).Activo)
                {
                    var ingresa = usuarioBLL.LogIn(usuario, contraseña);

                    if (ingresa)
                    {
                        this.Hide();
                        formControl.GuardarDatosSesionUsuario(usuarioBLL.ObtenerUsuarioConEmail(usuario));
                        PrincipalForm.ComprobarSiEsPrimerLogin(usuario);
                        PrincipalForm.Show();
                    }

                    else if (usuarioBLL.ObtenerUsuarioConEmail(usuario).ContadorIngresosIncorrectos < 3)
                    {
                        MessageBox.Show("Login Incorrecto", "Ingresar al Sistema");
                    }
                    else
                    {
                        MessageBox.Show("Cuenta bloqueada contacte a su administrador", "Ingresar al Sistema");
                    }
                }
                else
                {
                    MessageBox.Show("Coloque Usuario y Contraseña", "Ingresar al Sistema");
                }
            },
            (ex) => MessageBox.Show($"Ocurrio un error por lo siguiente {ex.Message}"));
        }
        //COMBOBOX PARA CAMBIAR DE IDIOMA
        private void cbo_idioma_SelectedIndexChanged(object sender, EventArgs e)
        {
            var lenguajeSeleccionado = (Idioma)cbo_idioma.SelectedItem;

            formControl.LenguajeSeleccionado = lenguajeSeleccionado;

            Traduccir();
        }
        //BOTON PARA SALIR DEL SISTEMA.
        private void btn_salir_Click(object sender, EventArgs e)
        {
            if (Alert.ConfirmationMessage("MSJ037", "Salir del Sistema", MessageBoxButtons.YesNo, "¿Seguro que desea salir?") == DialogResult.Yes)
            {
                this.Close();
            }

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void txt_user_TextChanged(object sender, EventArgs e)
        {

        }

        private void btn_CambiarBase_Click(object sender, EventArgs e)
        {
            var items = new InputBoxItem[1];
            items[0] = new InputBoxItem("ConnectionString", "", false);
            var input = InputBox.Show("Escriba el nombre de la base de datos", items, InputBoxButtons.OKCancel);

            if (input.Result == InputBoxResult.OK)
            {
                SqlUtils.Connection(input.Items["ConnectionString"]);
            }
        }
    }
}
